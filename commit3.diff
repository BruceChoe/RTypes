diff --git a/imports/NewVisualization/NewVisualization.js b/imports/NewVisualization/NewVisualization.js
index 46383a3..51909b6 100644
--- a/imports/NewVisualization/NewVisualization.js
+++ b/imports/NewVisualization/NewVisualization.js
@@ -4,7 +4,6 @@ import { EJSON } from "meteor/ejson";
 import { Template } from "meteor/templating";
 
 import "/imports/api/methods";
-import { Users } from "/imports/api/users";
 import { Comms } from "/imports/api/comms";
 
 // serving images via router? see here https://github.com/iron-meteor/iron-router/issues/1565
@@ -49,11 +48,6 @@ Meteor.subscribe("comms", {
     onStop:  (param) => { console.log("subscribe onStop / "  + param); }
 });
 
-Meteor.subscribe("users", {
-    onReady: (param) => { console.log("subscribe onReady / " + param); },
-    onStop:  (param) => { console.log("subscribe onStop / "  + param); }
-});
-
 let msgs = Comms.find();
 msgs.observe({
     added: (entry) => {
@@ -104,7 +98,7 @@ Template.newVisualization.onCreated(() => {
 
 Template.newVisualization.helpers({
     res() {
-        return EJSON.stringify(Users.find({}).fetch());
+        return EJSON.stringify(Meteor.user());
     }
 });
 
@@ -133,15 +127,17 @@ Template.fileUpload.events({
         progressBar.setAttribute("class", "spinner-border");
 
         let file = ev.currentTarget.files[0];
-        let user = "test_user";
-
-        let res = Users.find({username: user}).fetch();
-        console.log(Users);
-        console.log("fetched: " + res);
-        if (res.length != 0) {
-            console.log("Saving file " + file.name + "...");
-            saveFile(user, file, file.name, null, null, null);
+        let user = Meteor.user();
+        if (!user)
+        {
+            console.log("not logged in, returning");
+            return;
         }
+
+        let username = user.emails[0].address;
+        console.log(username);
+
+        saveFile(username, file, file.name, null, null, null);
     }
 });
 
@@ -156,7 +152,16 @@ Template.invokeScript.events({
         params.inputFile = uploadedFile.get().serverName;
         params.timestamp = uploadedFile.get().createdAt;
         console.log(params);
-        Meteor.call("invokeProcess", "test_user", uploadedFile.get().createdAt, params);
+
+        let user = Meteor.user();
+        if (user)
+        {
+            Meteor.call("invokeProcess", user.emails[0].address, uploadedFile.get().createdAt, params);
+        }
+        else
+        {
+            console.log("not logged in, returning");
+        }
     }
 });
 
diff --git a/imports/api/methods.js b/imports/api/methods.js
index 6bc0acc..8907cf5 100644
--- a/imports/api/methods.js
+++ b/imports/api/methods.js
@@ -2,7 +2,6 @@
 
 import { Meteor } from 'meteor/meteor';
 
-import { Users } from '/imports/api/users';
 import { Comms } from './comms';
 import { Visualizations } from '/imports/api/visualizations';
 
@@ -22,6 +21,12 @@ if (Meteor.isServer)
             // unix timestamps are a pretty "good enough" strat for unique filenames
             let saveTime = new Date().getTime();
 
+            if (!fs.existsSync(rootPath + "\\users\\" + user))
+            {
+                console.log('not exitss');
+                Meteor.call("createUserDirectories", user);
+            }
+
             name = "users\\" + user + "\\data\\" + saveTime.toString() + "-" + name;
             encoding = encoding || 'binary';
             chroot = Meteor.chroot || rootPath;
@@ -37,18 +42,10 @@ if (Meteor.isServer)
             console.log('The file ' + name + ' (' + encoding + ') was saved at ' + saveTime);
 
             Visualizations.insert({
+                createdBy: user,
                 createdAt: saveTime,
                 images: []
             });
-    
-            Users.update(
-                { username: user },
-                {
-                    $push: {
-                        visualizations: saveTime
-                    }
-                }
-            );
 
             Comms.insert({
                 type: "file-upload-complete",
diff --git a/imports/common/common.js b/imports/common/common.js
index 98b3e26..9cda67e 100644
--- a/imports/common/common.js
+++ b/imports/common/common.js
@@ -13,8 +13,4 @@ Template.sidebarVisualizationItems.helpers({
         console.log(visualizations);
         return visualizations.map(v => v.createdAt);
     }
-});
-/*
-Accounts.ui.config({
-    passwordSignupFields: "USERNAME_ONLY"
-}); */
\ No newline at end of file
+});
\ No newline at end of file
diff --git a/schema.json b/schema.json
index 121524e..a11f48a 100644
--- a/schema.json
+++ b/schema.json
@@ -1,15 +1,8 @@
 [
-  // user schema
-  {
-    "username": "user",
-    "passwordHash": "saltedPasswordHash",
-    "visualizations": [
-      // list of visualization ids
-    ]
-  },
   // visualization schema
   {
     "id": {
+      "createdBy": "user",
       "createdAt": "created time",
       "images": [
         // list of visualization file paths
